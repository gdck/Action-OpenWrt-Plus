#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Lean's OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'config/lean/*.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config/lean/*.config
  DIY_SH: scripts/lean-openwrt.sh
  FEEDS_CONF: feeds.conf.default
  SSH_ACTIONS: true
  KMODS_IN_FIRMWARE: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone Source Code
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update Feeds
      run: |
        cd openwrt
        echo "::set-env name=OPENWRTROOT::$PWD"
        ./scripts/feeds update -a

    - name: Install Feeds
      run: |
        cd $OPENWRTROOT
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        [ -e files ] && mv files $OPENWRTROOT/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRTROOT/.config
        chmod +x $DIY_SH
        cd $OPENWRTROOT
        ../$DIY_SH
        
        #编译小米R3G固件:
        #cat >> .config <<EOF
        #CONFIG_TARGET_ramips=y
        #CONFIG_TARGET_ramips_mt7621=y
        #CONFIG_TARGET_ramips_mt7621_DEVICE_xiaomi_mir3g=y
        #EOF
        
        #设置固件大小：
        #cat >> .config << EOF
        #CONFIG_TARGET_KERNEL_PARTSIZE=30
        #CONFIG_TARGET_ROOTFS_PARTSIZE=400
        #EOF
          
        #LuCI主题：
        #cat >> .config <<EOF
        #CONFIG_PACKAGE_luci-theme-agron=y
        #EOF

        #软件包：
        cat >> .config <<EOF
        CONFIG_ARIA2_BITTORRENT=y
        CONFIG_ARIA2_NOXML=y
        CONFIG_ARIA2_OPENSSL=y
        CONFIG_ARIA2_WEBSOCKET=y
        CONFIG_KSMBD_SMB_INSECURE_SERVER=y
        CONFIG_LIBCURL_COOKIES=y
        CONFIG_LIBCURL_FILE=y
        CONFIG_LIBCURL_FTP=y
        CONFIG_LIBCURL_HTTP=y
        CONFIG_LIBCURL_NO_SMB="!"
        CONFIG_LIBCURL_OPENSSL=y
        CONFIG_LIBCURL_PROXY=y
        CONFIG_NGINX_HEADERS_MORE=y
        CONFIG_NGINX_HTTP_ACCESS=y
        CONFIG_NGINX_HTTP_AUTH_BASIC=y
        CONFIG_NGINX_HTTP_AUTOINDEX=y
        CONFIG_NGINX_HTTP_BROWSER=y
        CONFIG_NGINX_HTTP_CACHE=y
        CONFIG_NGINX_HTTP_CHARSET=y
        CONFIG_NGINX_HTTP_EMPTY_GIF=y
        CONFIG_NGINX_HTTP_FASTCGI=y
        CONFIG_NGINX_HTTP_GEO=y
        CONFIG_NGINX_HTTP_GZIP=y
        CONFIG_NGINX_HTTP_LIMIT_CONN=y
        CONFIG_NGINX_HTTP_LIMIT_REQ=y
        CONFIG_NGINX_HTTP_MAP=y
        CONFIG_NGINX_HTTP_MEMCACHED=y
        CONFIG_NGINX_HTTP_PROXY=y
        CONFIG_NGINX_HTTP_REFERER=y
        CONFIG_NGINX_HTTP_REWRITE=y
        CONFIG_NGINX_HTTP_SCGI=y
        CONFIG_NGINX_HTTP_SPLIT_CLIENTS=y
        CONFIG_NGINX_HTTP_SSI=y
        CONFIG_NGINX_HTTP_UPSTREAM_HASH=y
        CONFIG_NGINX_HTTP_UPSTREAM_IP_HASH=y
        CONFIG_NGINX_HTTP_UPSTREAM_KEEPALIVE=y
        CONFIG_NGINX_HTTP_UPSTREAM_LEAST_CONN=y
        CONFIG_NGINX_HTTP_USERID=y
        CONFIG_NGINX_HTTP_UWSGI=y
        CONFIG_NGINX_NAXSI=y
        CONFIG_NGINX_PCRE=y
        CONFIG_NODEJS_ICU_NONE=y
        CONFIG_OPENSSL_WITH_COMPRESSION=y
        CONFIG_OPENSSL_WITH_DTLS=y
        CONFIG_OPENSSL_WITH_EC2M=y
        CONFIG_OPENSSL_WITH_NPN=y
        CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
        CONFIG_PACKAGE_UnblockNeteaseMusic=y
        CONFIG_PACKAGE_UnblockNeteaseMusicGo=y
        #CONFIG_PACKAGE_adbyby is not set
        CONFIG_PACKAGE_aria2=y
        CONFIG_PACKAGE_ariang=y
        CONFIG_PACKAGE_baidupcs-web=y
        CONFIG_PACKAGE_bash=y
        CONFIG_PACKAGE_boost=y
        CONFIG_PACKAGE_boost-date_time=y
        CONFIG_PACKAGE_boost-program_options=y
        CONFIG_PACKAGE_boost-system=y
        CONFIG_PACKAGE_bzip2=y
        CONFIG_PACKAGE_ca-bundle=y
        CONFIG_PACKAGE_coreutils=y
        CONFIG_PACKAGE_coreutils-base64=y
        CONFIG_PACKAGE_coreutils-nohup=y
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_haproxy=y
        CONFIG_PACKAGE_hd-idle=y
        CONFIG_PACKAGE_ipt2socks=y
        CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
        CONFIG_PACKAGE_iptables-mod-ipopt=y
        CONFIG_PACKAGE_iptables-mod-tproxy=y
        CONFIG_PACKAGE_kcptun-client=y
        CONFIG_PACKAGE_kmod-crypto-acompress=y
        CONFIG_PACKAGE_kmod-crypto-ccm=y
        CONFIG_PACKAGE_kmod-crypto-cmac=y
        CONFIG_PACKAGE_kmod-crypto-crc32c=y
        CONFIG_PACKAGE_kmod-crypto-ctr=y
        CONFIG_PACKAGE_kmod-crypto-des=y
        CONFIG_PACKAGE_kmod-crypto-gcm=y
        CONFIG_PACKAGE_kmod-crypto-gf128=y
        CONFIG_PACKAGE_kmod-crypto-ghash=y
        CONFIG_PACKAGE_kmod-crypto-hmac=y
        CONFIG_PACKAGE_kmod-crypto-iv=y
        CONFIG_PACKAGE_kmod-crypto-md4=y
        CONFIG_PACKAGE_kmod-crypto-md5=y
        CONFIG_PACKAGE_kmod-crypto-rng=y
        CONFIG_PACKAGE_kmod-crypto-seqiv=y
        CONFIG_PACKAGE_kmod-crypto-sha256=y
        CONFIG_PACKAGE_kmod-crypto-sha512=y
        CONFIG_PACKAGE_kmod-crypto-wq=y
        CONFIG_PACKAGE_kmod-fs-exfat=y
        CONFIG_PACKAGE_kmod-fs-ext4=y
        CONFIG_PACKAGE_kmod-fs-ksmbd=y
        CONFIG_PACKAGE_kmod-fs-vfat=y
        CONFIG_PACKAGE_kmod-fuse=y
        CONFIG_PACKAGE_kmod-ifb=y
        CONFIG_PACKAGE_kmod-input-core=y
        CONFIG_PACKAGE_kmod-ip6tables=y
        CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
        CONFIG_PACKAGE_kmod-ipt-ipopt=y
        CONFIG_PACKAGE_kmod-ipt-tproxy=y
        CONFIG_PACKAGE_kmod-lib-crc16=y
        CONFIG_PACKAGE_kmod-lib-lz4=y
        CONFIG_PACKAGE_kmod-lib-lzo=y
        CONFIG_PACKAGE_kmod-nf-ipt6=y
        CONFIG_PACKAGE_kmod-nf-reject6=y
        CONFIG_PACKAGE_kmod-nls-cp437=y
        CONFIG_PACKAGE_kmod-nls-iso8859-1=y
        CONFIG_PACKAGE_kmod-nls-utf8=y
        CONFIG_PACKAGE_kmod-sched-connmark=y
        CONFIG_PACKAGE_kmod-sched-core=y
        CONFIG_PACKAGE_kmod-scsi-core=y
        CONFIG_PACKAGE_kmod-sound-core=y
        CONFIG_PACKAGE_kmod-usb-ehci=y
        CONFIG_PACKAGE_kmod-usb-printer=y
        CONFIG_PACKAGE_kmod-usb-storage=y
        CONFIG_PACKAGE_kmod-usb-storage-extras=y
        CONFIG_PACKAGE_kmod-usb-uhci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-zram=y
        CONFIG_PACKAGE_ksmbd-server=y
        CONFIG_PACKAGE_libatomic=y
        CONFIG_PACKAGE_libblkid=y
        CONFIG_PACKAGE_libbz2=y
        CONFIG_PACKAGE_libcap=y
        CONFIG_PACKAGE_libcares=y
        CONFIG_PACKAGE_libcurl=y
        CONFIG_PACKAGE_libfreetype=y
        CONFIG_PACKAGE_libhttp-parser=y
        CONFIG_PACKAGE_libjpeg=y
        CONFIG_PACKAGE_libltdl=y
        CONFIG_PACKAGE_libmaxminddb=y
        CONFIG_PACKAGE_libncurses=y
        CONFIG_PACKAGE_libnetfilter-conntrack=y
        CONFIG_PACKAGE_libnfnetlink=y
        CONFIG_PACKAGE_libnghttp2=y
        CONFIG_PACKAGE_libnl-core=y
        CONFIG_PACKAGE_libnl-genl=y
        CONFIG_PACKAGE_libpng=y
        CONFIG_PACKAGE_libreadline=y
        CONFIG_PACKAGE_libstdcpp=y
        CONFIG_PACKAGE_libuv=y
        CONFIG_PACKAGE_libwebsockets-full=y
        CONFIG_PACKAGE_lua-cjson=y
        CONFIG_PACKAGE_lua-maxminddb=y
        CONFIG_PACKAGE_luasocket=y
        #CONFIG_PACKAGE_luci-app-adbyby-plus is not set
        CONFIG_PACKAGE_luci-app-adguardhome=y
        CONFIG_PACKAGE_luci-app-aria2=y
        CONFIG_PACKAGE_luci-app-baidupcs-web=y
        CONFIG_PACKAGE_luci-app-cifsd=y
        CONFIG_PACKAGE_luci-app-hd-idle=y
        CONFIG_PACKAGE_luci-app-kodexplorer=y
        CONFIG_PACKAGE_luci-app-mwan3=n
        CONFIG_PACKAGE_luci-app-mwan3helper=n
        CONFIG_PACKAGE_luci-app-qos=y
        CONFIG_PACKAGE_luci-app-samba=y
        CONFIG_PACKAGE_luci-app-syncdial=n
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-usb-printer=y
        CONFIG_PACKAGE_luci-app-vssr=y
        CONFIG_PACKAGE_luci-app-webadmin=y
        CONFIG_PACKAGE_luci-app-xlnetacc=y
        CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-cifsd-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-kodexplorer-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-qos-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-samba-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-usb-printer-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-webadmin-zh-cn=y
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_mwan3=y
        CONFIG_PACKAGE_node=y
        CONFIG_PACKAGE_ntfs-3g=y
        CONFIG_PACKAGE_p910nd=y
        CONFIG_PACKAGE_php7=y
        CONFIG_PACKAGE_php7-fpm=y
        CONFIG_PACKAGE_php7-mod-curl=y
        CONFIG_PACKAGE_php7-mod-gd=y
        CONFIG_PACKAGE_php7-mod-iconv=y
        CONFIG_PACKAGE_php7-mod-json=y
        CONFIG_PACKAGE_php7-mod-mbstring=y
        CONFIG_PACKAGE_php7-mod-opcache=y
        CONFIG_PACKAGE_php7-mod-session=y
        CONFIG_PACKAGE_php7-mod-zip=y
        CONFIG_PACKAGE_qos-scripts=y
        CONFIG_PACKAGE_resolveip=y
        CONFIG_PACKAGE_samba36-server=y
        CONFIG_PACKAGE_shadowsocksr-libev-alt=y
        CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
        CONFIG_PACKAGE_swap-utils=y
        CONFIG_PACKAGE_tc=y
        CONFIG_PACKAGE_terminfo=y
        CONFIG_PACKAGE_trojan=y
        CONFIG_PACKAGE_ttyd=y
        CONFIG_PACKAGE_unzip=y
        CONFIG_PACKAGE_v2ray=y
        CONFIG_PACKAGE_v2ray-plugin=y
        CONFIG_PACKAGE_wsdd2=y
        CONFIG_PACKAGE_zoneinfo-asia=y
        CONFIG_PACKAGE_zram-swap=y
        CONFIG_PHP7_LIBFREETYPE=y
        CONFIG_UnblockNeteaseMusic_Go=y
        CONFIG_UnblockNeteaseMusic_NodeJS=y
        CONFIG_V2RAY_COMPRESS_UPX=y
        CONFIG_V2RAY_DISABLE_NONE=y
        CONFIG_V2RAY_EXCLUDE_ASSETS=y
        CONFIG_V2RAY_EXCLUDE_V2CTL=y
        CONFIG_V2RAY_JSON_INTERNAL=y
        CONFIG_boost-compile-visibility-hidden=y
        CONFIG_boost-runtime-shared=y
        CONFIG_boost-static-and-shared-libs=y
        CONFIG_boost-variant-release=y
        CONFIG_PACKAGE_drill=y
        CONFIG_PACKAGE_luci-app-serverchan=y
        CONFIG_PACKAGE_luci-app-diskman=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-app-guest-wifi=y
        CONFIG_PACKAGE_luci-app-syncthing=y
        CONFIG_PACKAGE_luci-app-wrtbwmon=y
        CONFIG_PACKAGE_luci-i18n-wrtbwmon-zh-cn=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-music-remote-center=y
        CONFIG_PACKAGE_kmod-tun=y
        CONFIG_PACKAGE_luci-app-minidlna=y
        CONFIG_PACKAGE_ipv6helper=y
        EOF

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')
      
    - name: Download Package
      id: package
      run: |
        cd $OPENWRTROOT
        if "$KMODS_IN_FIRMWARE" = 'true'
        then
            echo "CONFIG_ALL_KMODS=y" >> .config
        fi
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Packages
      id: compile
      run: |
        cd $OPENWRTROOT
        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
        make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
        make diffconfig
        make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j1 V=s IGNORE_ERRORS=1
        make package/index
        echo "::set-output name=status::success"

    - name: Set Environment Variable
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRTROOT/bin/packages/*
        PLATFORM=$(basename `pwd`)
        echo "::set-env name=PLATFORM::$PLATFORM"
        cd $OPENWRTROOT/bin/targets/*
        TARGET=$(basename `pwd`)
        echo "::set-env name=TARGET::$TARGET"
        cd *
        SUBTARGET=$(basename `pwd`)
        echo "::set-env name=SUBTARGET::$SUBTARGET"
        echo "::set-env name=FIRMWARE::$PWD"

    - name: Generate Firmware
      if: steps.compile.outputs.status == 'success'
      id: generate
      run: |
        cd $OPENWRTROOT
        mkdir -p files/etc/opkg
        if "$KMODS_IN_FIRMWARE" = 'true'
        then
            mkdir -p files/www/snapshots/targets
            cp -r bin/targets/$TARGET files/www/snapshots/targets
            cp ../config/opkg/distfeeds-18.06-local.conf files/etc/opkg/distfeeds.conf
            sed -i "s/subtarget/$SUBTARGET/g" files/etc/opkg/distfeeds.conf
            sed -i "s/target\//$TARGET\//g" files/etc/opkg/distfeeds.conf
            sed -i "s/platform/$PLATFORM/g" files/etc/opkg/distfeeds.conf
        else
            cp ../config/opkg/distfeeds-18.06-remote.conf files/etc/opkg/distfeeds.conf
            sed -i "s/subtarget/$SUBTARGET/g" files/etc/opkg/distfeeds.conf
            sed -i "s/target\//$TARGET\//g" files/etc/opkg/distfeeds.conf
            sed -i "s/platform/$PLATFORM/g" files/etc/opkg/distfeeds.conf
        fi
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        make checksum
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"
        echo "::set-output name=status::success"
        
    - name: Deploy Packages-Server
      if: steps.generate.outputs.status == 'success'
      run: |
        mkdir -p server/web/snapshots/targets/$TARGET/$SUBTARGET
        cp -r $OPENWRTROOT/bin/packages server/web/snapshots
        cp -r $OPENWRTROOT/bin/targets/$TARGET/$SUBTARGET/packages server/web/snapshots/targets/$TARGET/$SUBTARGET
        mkdir -p $OPENWRTROOT/bin/targets/$TARGET/$SUBTARGET/pre-packages-server
        cp -r server $OPENWRTROOT/bin/targets/$TARGET/$SUBTARGET/pre-packages-server
        cd $OPENWRTROOT/bin/targets/$TARGET/$SUBTARGET
        zip -q -r packages-server.zip pre-packages-server/server
        
    - name: Upload Config
      uses: actions/upload-artifact@master
      if: steps.generate.outputs.status == 'success'
      with:
        name: config.seed
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/config.seed
        
    - name: Upload Packages-Server
      uses: actions/upload-artifact@master
      if: steps.generate.outputs.status == 'success'
      with:
        name: packages-server
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/pre-packages-server
        
    - name: Upload Images Sha256sums
      uses: actions/upload-artifact@master
      if: steps.generate.outputs.status == 'success'
      with:
        name: sha256sums
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/sha256sums
        
    - name: Upload Bin Directory
      uses: actions/upload-artifact@master
      if: steps.generate.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: openwrt-bin-directory${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize Files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/$TARGET/$SUBTARGET
        rm -rf packages pre-packages-server
        echo "::set-output name=status::success"

    - name: Upload Firmware Directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: openwrt-firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload Firmware To CowTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload Firmware To WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
